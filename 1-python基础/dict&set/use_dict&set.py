# 一、字典（Dictionary）
# 1. 基本特性
# 定义：键值对（key-value）的无序集合，key 必须是不可变类型（如字符串、数字、元组），value 可以是任意类型。
#
# 核心特性：
#
# 唯一性：key 必须唯一，重复的 key 会覆盖旧值。
#
# 动态性：可随时增删键值对。
#
# 高效性：基于哈希表实现，查找、插入、删除的时间复杂度为 O(1)。
#
# 2. 常用操作
# 创建字典
d1 = {"name": "Alice", "age": 25}
d2 = dict(name="Bob", age=30)

# 增删改查
d1["gender"] = "Female"     # 添加键值对
d1["age"] = 26              # 修改值
del d1["gender"]            # 删除键值对
value = d1.get("name", "")  # 安全获取值

# 常用方法
keys = d1.keys()            # 获取所有键（视图对象）
values = d1.values()        # 获取所有值（视图对象）
items = d1.items()          # 获取所有键值对（视图对象）
d1.update({"city": "NY"})   # 合并字典

# 3. 字典推导式
# 生成 {0:0, 1:1, 2:4, 3:9}
squares = {x: x**2 for x in range(4)}

# 4. 实际应用
# 数据缓存：快速存储和检索数据。
#
# 配置管理：存储程序配置参数。
#
# JSON 交互：与 JSON 数据结构天然兼容。

# 二、集合（Set）
# 1. 基本特性
# 定义：无序且元素唯一的容器，元素必须是不可变类型。
#
# 核心特性：
#
# 去重性：自动去除重复元素。
#
# 高效性：基于哈希表实现，成员检测的时间复杂度为 O(1)。
#
# 数学运算：支持交集、并集、差集等集合运算。
# 2. 常用操作
# 创建集合
s1 = {1, 2, 3}
s2 = set([2, 3, 4])

# 增删元素
s1.add(4)        # 添加元素
s1.remove(1)     # 删除元素（元素不存在会报错）
s1.discard(5)    # 安全删除（元素不存在不报错）

# 集合运算
union = s1 | s2         # 并集
intersection = s1 & s2  # 交集
difference = s1 - s2    # 差集
symmetric_diff = s1 ^ s2  # 对称差集

# 3. 集合推导式
# 生成 {0, 1, 4, 9}
squares = {x**2 for x in range(5)}

# 4. 实际应用
# 去重：快速去除列表中的重复元素。
lst = [1, 2, 2, 3]
unique = list(set(lst))  # [1, 2, 3]
# 成员检测：快速判断元素是否存在。
# 数学运算：处理数据集的关系（如共同好友）。

# 三、字典 vs 集合
# 特性	    字典（dict）	            集合（set）
# 存储内容	键值对（key-value）	    唯一元素
# 元素访问	通过 key 访问 value	    只能检测元素是否存在
# 可变性	    键不可变，值可变	        元素不可变
# 典型应用	数据映射、配置存储	        去重、集合运算
# 性能优势	快速通过 key 查找 value	快速检测元素是否存在